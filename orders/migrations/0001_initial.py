# Generated by Django 4.1.7 on 2023-05-11 18:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0003_client_manager_remove_registrationorder_manager_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Скидка')),
                ('identifier_1C', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Идентификатор 1С')),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекции',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('introductory', 'Предварительный'), ('confirmed', 'Подтвержден'), ('paid', 'Оплачен'), ('shipment', 'Отгрузка'), ('completed', 'Завершен')], db_index=True, default='introductory', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oders_by_client', to='clients.client', verbose_name='Клиент')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oders_by_manager', to='clients.manager', verbose_name='Ответственный менеджер')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PriceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип цены',
                'verbose_name_plural': 'Типы цен',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Наименование')),
                ('articul', models.CharField(blank=True, max_length=200, verbose_name='Артикул')),
                ('unit', models.CharField(choices=[('796', 'штук'), ('163', 'грамм')], db_index=True, default='грамм', max_length=20, verbose_name='Единица измерения')),
                ('price_per_gr', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена за грамм')),
                ('weight', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Вес')),
                ('size', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Размер')),
                ('stock', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Остаток')),
                ('available_for_order', models.BooleanField(db_index=True, default=False, verbose_name='Доступен для заказа')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('product_type', models.CharField(choices=[('product', 'товар'), ('service', 'услуга'), ('gift_сertificate', 'подарочный сертификат')], db_index=True, default='product', max_length=20, verbose_name='Тип номенклатуры')),
                ('identifier_1C', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='Идентификатор 1С')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_by_brands', to='clients.prioritydirection', verbose_name='Бренд')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods', to='orders.collection', verbose_name='Коллекция')),
            ],
            options={
                'verbose_name': 'Номенклатура',
                'verbose_name_plural': 'Номенкулатура',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, db_index=True, max_length=100, verbose_name='Имя файла')),
                ('image', models.ImageField(upload_to='product_images', verbose_name='Фото номенклатуры')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='orders.product', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(choices=[('796', 'штук'), ('163', 'грамм')], db_index=True, default='грамм', max_length=20, verbose_name='Единица измерения')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('start_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата начала действия')),
                ('end_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата окончания действия')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='orders.product', verbose_name='Номенклатура')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices_by_type', to='orders.pricetype', verbose_name='Тип цены')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(choices=[('штук', 'штук'), ('грамм', 'грамм')], db_index=True, default='грамм', max_length=20, verbose_name='Единица измерения')),
                ('series', models.CharField(blank=True, max_length=50, verbose_name='Серия')),
                ('uin', models.CharField(blank=True, max_length=50, verbose_name='УИН')),
                ('weight', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Вес')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('sum', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Скидка')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Заказ')),
                ('price_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items_by_price', to='orders.pricetype', verbose_name='Тип цены')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='orders.product', verbose_name='Номенклатура')),
            ],
        ),
    ]
